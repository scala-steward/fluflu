name: CI
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        versions:
          - scala2
          - scala3
    runs-on: ubuntu-latest
    services:
      fluentd:
        image: fluentd
        ports:
          - 24224:24224
    steps:
      - uses: actions/checkout@v4
      - id: scala-version
        run: |
          scala_version=$(grep "${{ matrix.versions }}" project/Dependencies.scala | sed -E 's/.*= //')
          echo "value=${scala_version}" >> $GITHUB_OUTPUT
      - uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: "sbt"
      - uses: sbt/setup-sbt@v1
      - run: sbt ++${{ steps.scala-version.outputs.value }} coverage test
      - run: sbt ++${{ steps.scala-version.outputs.value }} examples/run
      - run: sbt ++${{ steps.scala-version.outputs.value }} coverageReport
        if: ${{ !startsWith(steps.scala-version.outputs.value, '3') }}
      - uses: codecov/codecov-action@v5
        if: ${{ !startsWith(steps.scala-version.outputs.value, '3') }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          fail_ci_if_error: true
          verbose: true
      - run: sbt ++${{ steps.scala-version.outputs.value }} it/test
  scalafmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: "sbt"
      - uses: sbt/setup-sbt@v1
      - run: sbt scalafmtCheckAll
  scalafix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: "sbt"
      - uses: sbt/setup-sbt@v1
      - run: sbt "scalafixAll --check"
